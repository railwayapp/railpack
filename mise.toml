[env]
BUILDKIT_HOST = "docker-container://buildkit"
_.path = './bin'

[tasks.setup]
run = [
  "mise install",
  # trust all mise.toml files in the examples directory, otherwise unit tests can fail
  "find examples -name \"mise.toml\" -execdir mise trust \\;",
  "docker run --rm --privileged -d --name buildkit moby/buildkit || true",
  "mise run tidy",
  "cd docs/ && bun install",
]

[tasks.cli]
run = "go run cmd/cli/main.go"

# build the CLI binary (`./bin/railpack`)
[tasks.build]
run = "go build -o bin/railpack cmd/cli/main.go"

[tasks.clean]
run = "rm -rf bin dist docs/dist"

# run unit tests
[tasks.test]
run = "go test -short ./..."

# Runs *all* integration tests. It is extremely slow, do not run this locally.
# Instead, only run the test that you are currently working on:
# `mise run test-integration -- -run "TestExamplesIntegration/config-file"`
[tasks.test-integration]
run = "go test -v ./integration_tests"

# update all test snapshots
[tasks.test-update-snapshots]
run = "UPDATE_SNAPS=true go test -short ./..."

# linting, formatting, and static analysis
[tasks.check]
run = """
go vet ./...
go fmt ./...
golangci-lint run
"""

[tasks.tidy]
run = "go mod tidy"

[tasks.docs-build]
dir = "docs"
run = "bun run build"

[tasks.docs-dev]
dir = "docs"
run = "bun run dev"

[tools]
go = "1.23.4"
golangci-lint = "1.63.4"
bun = "1.2"
node = "22"
"go:github.com/wagoodman/dive" = "latest"

[settings]
experimental = true
# without this, navigating into various examples/ will output an annoying warning
idiomatic_version_file_enable_tools = ["python", "node", "ruby"]
